{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# Import all required libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\nimport json","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2023-03-04T04:38:29.049749Z","iopub.execute_input":"2023-03-04T04:38:29.050306Z","iopub.status.idle":"2023-03-04T04:38:29.059156Z","shell.execute_reply.started":"2023-03-04T04:38:29.050261Z","shell.execute_reply":"2023-03-04T04:38:29.057441Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Include file location for the dataset to be used\nmovie_dataset = \"/kaggle/input/imdb-review-dataset\" \n\n# List of all files in the dataset to be used \nmovie_dataset_list = [\"part-01.json\", \"part-02.json\", \"part-03.json\", \"part-04.json\", \"part-05.json\", \"part-06.json\"]\n\n# Initialize list to store the dataset on an empty list\nimdb_movies = []\n\n# Loop through the list of files and load the reviews into the list\nfor file in movie_dataset_list:\n    with open(f\"{movie_dataset}/{file}\", mode='r') as movie_file:\n        df_imdb_movies = json.load(movie_file)\n        imdb_movies.extend(df_imdb_movies)\n\n# Convert the list of movies to a pandas DataFrame\nreview_dataset = pd.DataFrame(imdb_movies)","metadata":{"execution":{"iopub.status.busy":"2023-03-04T04:38:29.061701Z","iopub.execute_input":"2023-03-04T04:38:29.062229Z","iopub.status.idle":"2023-03-04T04:40:22.775851Z","shell.execute_reply.started":"2023-03-04T04:38:29.062171Z","shell.execute_reply":"2023-03-04T04:40:22.774106Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"review_dataset.head()","metadata":{"execution":{"iopub.status.busy":"2023-03-04T04:41:07.674035Z","iopub.execute_input":"2023-03-04T04:41:07.675572Z","iopub.status.idle":"2023-03-04T04:41:07.708652Z","shell.execute_reply.started":"2023-03-04T04:41:07.675516Z","shell.execute_reply":"2023-03-04T04:41:07.707559Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#inspecting data\nreview_dataset.info()","metadata":{"execution":{"iopub.status.busy":"2023-03-04T04:42:22.897406Z","iopub.execute_input":"2023-03-04T04:42:22.897824Z","iopub.status.idle":"2023-03-04T04:42:22.919131Z","shell.execute_reply.started":"2023-03-04T04:42:22.897792Z","shell.execute_reply":"2023-03-04T04:42:22.917594Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"review_dataset.tail()","metadata":{"execution":{"iopub.status.busy":"2023-03-04T04:48:32.467832Z","iopub.execute_input":"2023-03-04T04:48:32.469614Z","iopub.status.idle":"2023-03-04T04:48:32.534549Z","shell.execute_reply.started":"2023-03-04T04:48:32.469420Z","shell.execute_reply":"2023-03-04T04:48:32.529529Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"review_dataset.describe()","metadata":{"execution":{"iopub.status.busy":"2023-03-04T04:52:24.213403Z","iopub.execute_input":"2023-03-04T04:52:24.214088Z","iopub.status.idle":"2023-03-04T04:52:24.472267Z","shell.execute_reply.started":"2023-03-04T04:52:24.214035Z","shell.execute_reply":"2023-03-04T04:52:24.470765Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"review_dataset.columns","metadata":{"execution":{"iopub.status.busy":"2023-03-04T04:54:49.402658Z","iopub.execute_input":"2023-03-04T04:54:49.403417Z","iopub.status.idle":"2023-03-04T04:54:49.412104Z","shell.execute_reply.started":"2023-03-04T04:54:49.403373Z","shell.execute_reply":"2023-03-04T04:54:49.410667Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Dropping irellevant columns\nreview_dataset= review_dataset.drop(['review_date', 'spoiler_tag', 'helpful'], axis= 1)","metadata":{"execution":{"iopub.status.busy":"2023-03-04T04:58:35.906109Z","iopub.execute_input":"2023-03-04T04:58:35.906594Z","iopub.status.idle":"2023-03-04T04:58:37.697029Z","shell.execute_reply.started":"2023-03-04T04:58:35.906554Z","shell.execute_reply":"2023-03-04T04:58:37.695778Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"review_dataset","metadata":{"execution":{"iopub.status.busy":"2023-03-04T04:58:51.524336Z","iopub.execute_input":"2023-03-04T04:58:51.525915Z","iopub.status.idle":"2023-03-04T04:58:51.548468Z","shell.execute_reply.started":"2023-03-04T04:58:51.525826Z","shell.execute_reply":"2023-03-04T04:58:51.546600Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Change the data type of rating  column from object to float \nreview_dataset.rating = pd.to_numeric(review_dataset.rating)","metadata":{"execution":{"iopub.status.busy":"2023-03-04T05:05:25.460190Z","iopub.execute_input":"2023-03-04T05:05:25.460779Z","iopub.status.idle":"2023-03-04T05:05:30.290473Z","shell.execute_reply.started":"2023-03-04T05:05:25.460733Z","shell.execute_reply":"2023-03-04T05:05:30.289092Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#confirming the change from object to float\nreview_dataset.dtypes","metadata":{"execution":{"iopub.status.busy":"2023-03-04T05:05:42.585377Z","iopub.execute_input":"2023-03-04T05:05:42.586262Z","iopub.status.idle":"2023-03-04T05:05:42.595975Z","shell.execute_reply.started":"2023-03-04T05:05:42.586175Z","shell.execute_reply":"2023-03-04T05:05:42.595090Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"execution":{"iopub.status.busy":"2023-03-04T05:27:15.465313Z","iopub.execute_input":"2023-03-04T05:27:15.465753Z","iopub.status.idle":"2023-03-04T05:27:15.533525Z","shell.execute_reply.started":"2023-03-04T05:27:15.465708Z","shell.execute_reply":"2023-03-04T05:27:15.531923Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Question 1: Which movie has the highest rating?","metadata":{}},{"cell_type":"code","source":"# Sort the dataframe in descending order of rating column to show ratings from highest to lowest\nreview_dataset.sort_values(by='rating', ascending=False, inplace=True)\nreview_dataset.head()","metadata":{"execution":{"iopub.status.busy":"2023-03-04T05:07:59.994909Z","iopub.execute_input":"2023-03-04T05:07:59.996339Z","iopub.status.idle":"2023-03-04T05:08:05.518961Z","shell.execute_reply.started":"2023-03-04T05:07:59.996234Z","shell.execute_reply":"2023-03-04T05:08:05.517851Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":" There are more than one movie with the highest rating which is a 10.0. Next is to select the movie with the most number of the highest rating of 10.0","metadata":{}},{"cell_type":"code","source":"#  Selecting the movie with the most number of ratings by grouping them.\nrating_number = review_dataset.groupby(['movie', 'rating']).size().reset_index(name='total_review_ratings')\nrating_number.sort_values(by=['rating','total_review_ratings'],ascending=[False,False],inplace=True)\n\nrating_number.head(1)","metadata":{"execution":{"iopub.status.busy":"2023-03-04T05:22:24.692770Z","iopub.execute_input":"2023-03-04T05:22:24.693265Z","iopub.status.idle":"2023-03-04T05:22:32.982037Z","shell.execute_reply.started":"2023-03-04T05:22:24.693226Z","shell.execute_reply":"2023-03-04T05:22:32.980555Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"##### As observed from above the movie with the highest total review ratings is Dil Bechara(2020) at rating of 10.0 with total number of ratings of 7188","metadata":{}},{"cell_type":"markdown","source":"## Question 2: How many reviews gave it the highest rating?","metadata":{}},{"cell_type":"code","source":"highest_rated_movie = rating_number.nlargest(1,'total_review_ratings')['movie'].values[0]\nhighest_rated_movie","metadata":{"execution":{"iopub.status.busy":"2023-03-04T05:33:19.195241Z","iopub.execute_input":"2023-03-04T05:33:19.195723Z","iopub.status.idle":"2023-03-04T05:33:19.457513Z","shell.execute_reply.started":"2023-03-04T05:33:19.195688Z","shell.execute_reply":"2023-03-04T05:33:19.456068Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"highest_rating = rating_number.loc[rating_number['movie'] == highest_rated_movie, 'rating'].max()\nhighest_rating\n","metadata":{"execution":{"iopub.status.busy":"2023-03-04T05:34:19.630450Z","iopub.execute_input":"2023-03-04T05:34:19.630924Z","iopub.status.idle":"2023-03-04T05:34:20.171544Z","shell.execute_reply.started":"2023-03-04T05:34:19.630887Z","shell.execute_reply":"2023-03-04T05:34:20.170491Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Count the number of unique reviewers who gave the top movie the highest rating\nreviewers_count = review_dataset[(review_dataset['movie'] == highest_rated_movie) & (review_dataset['rating'] == highest_rating)].reviewer.nunique()\nprint(f\"{reviewers_count} unique reviewers gave the highest rating\")","metadata":{"execution":{"iopub.status.busy":"2023-03-04T06:18:38.499060Z","iopub.execute_input":"2023-03-04T06:18:38.499595Z","iopub.status.idle":"2023-03-04T06:18:40.259107Z","shell.execute_reply.started":"2023-03-04T06:18:38.499551Z","shell.execute_reply":"2023-03-04T06:18:40.257520Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#finding the least rating ofthe highest rated movie\nleast_rating = review_dataset.loc[review_dataset['movie'] == highest_rated_movie, 'rating'].min()\nleast_rating","metadata":{"execution":{"iopub.status.busy":"2023-03-04T06:02:23.028123Z","iopub.execute_input":"2023-03-04T06:02:23.028659Z","iopub.status.idle":"2023-03-04T06:02:24.838678Z","shell.execute_reply.started":"2023-03-04T06:02:23.028616Z","shell.execute_reply":"2023-03-04T06:02:24.837288Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"least_rated_movie = review_dataset[(review_dataset['movie'] == highest_rated_movie) & (review_dataset['rating'] == least_rating)]\nleast_rated_movie.tail(1)","metadata":{"execution":{"iopub.status.busy":"2023-03-04T06:04:12.611243Z","iopub.execute_input":"2023-03-04T06:04:12.611726Z","iopub.status.idle":"2023-03-04T06:04:14.409074Z","shell.execute_reply.started":"2023-03-04T06:04:12.611688Z","shell.execute_reply":"2023-03-04T06:04:14.407705Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"rating_least_rated_movie = least_rated_movie['rating'].values[0]\nreview_detail = least_rated_movie['review_detail'].values[0]\nprint(f\"Rating of the movie {highest_rated_movie} is: {rating_least_rated_movie}\")\nprint(f\"Review details of {highest_rated_movie} is : {review_detail}\")","metadata":{"execution":{"iopub.status.busy":"2023-03-04T06:15:14.613499Z","iopub.execute_input":"2023-03-04T06:15:14.614021Z","iopub.status.idle":"2023-03-04T06:15:14.622147Z","shell.execute_reply.started":"2023-03-04T06:15:14.613973Z","shell.execute_reply":"2023-03-04T06:15:14.620762Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}